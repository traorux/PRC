// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRC.DATA;

namespace PRC.DATA.Migrations
{
    [DbContext(typeof(PRCDbContext))]
    partial class PRCDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PRC.CORE.Model.Call", b =>
                {
                    b.Property<string>("CallRef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExtensionNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateHeure")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<string>("removeParticipant")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("typeCall")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CallRef");

                    b.HasIndex("ExtensionNumber");

                    b.HasIndex("IdCustomer");

                    b.ToTable("Calls");

                    b.HasData(
                        new
                        {
                            CallRef = "a2daba6270000400",
                            CustomerNumber = "890",
                            ExtensionNumber = "891",
                            IdCustomer = 1,
                            dateHeure = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            removeParticipant = "890",
                            typeCall = "IncommingCall"
                        });
                });

            modelBuilder.Entity("PRC.CORE.Model.Customer", b =>
                {
                    b.Property<int>("IdCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCustomer");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            IdCustomer = 1,
                            CustomerNumber = "890",
                            FirstName = "JeanLuc",
                            LastName = "Kouame"
                        });
                });

            modelBuilder.Entity("PRC.CORE.Model.DataCustom", b =>
                {
                    b.Property<int>("IdDataCustom")
                        .HasColumnType("int");

                    b.Property<string>("DateVisiteTec")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroCompte")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeVoiture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdDataCustom");

                    b.ToTable("DataCustoms");

                    b.HasData(
                        new
                        {
                            IdDataCustom = 1,
                            DateVisiteTec = "12/06/2022",
                            NumeroCompte = "oxe890",
                            TypeVoiture = "Navara"
                        });
                });

            modelBuilder.Entity("PRC.CORE.Model.Extension", b =>
                {
                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("loginName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Number");

                    b.ToTable("Extensions");

                    b.HasData(
                        new
                        {
                            Number = "891",
                            Password = "0000",
                            loginName = "oxe891"
                        });
                });

            modelBuilder.Entity("PRC.CORE.Model.Request", b =>
                {
                    b.Property<string>("IdRequest")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRequest");

                    b.ToTable("Requests");

                    b.HasData(
                        new
                        {
                            IdRequest = "a2daba6270000400",
                            Motif = "Demande de cotation",
                            status = "En cours de traitement"
                        });
                });

            modelBuilder.Entity("PRC.CORE.Model.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRole");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PRC.CORE.Model.State", b =>
                {
                    b.Property<int>("IdState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CallRef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("dateHeure")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.HasKey("IdState");

                    b.HasIndex("CallRef");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            IdState = 1,
                            CallRef = "a2daba6270000400",
                            Status = "Pending",
                            dateHeure = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PRC.CORE.Model.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            IdUser = 1,
                            DeviceNumber = "891",
                            FirstName = "Marc",
                            LastName = "Kouadio",
                            UserEmail = "jean@gmail.com"
                        });
                });

            modelBuilder.Entity("PRC.CORE.Model.User_Role", b =>
                {
                    b.Property<int>("IdRole")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("IdRole", "IdUser");

                    b.HasIndex("IdUser");

                    b.ToTable("Users_Roles");
                });

            modelBuilder.Entity("PRC.CORE.Model.Call", b =>
                {
                    b.HasOne("PRC.CORE.Model.Extension", "Extension")
                        .WithMany("Calls")
                        .HasForeignKey("ExtensionNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRC.CORE.Model.Customer", "Customer")
                        .WithMany("Calls")
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Extension");
                });

            modelBuilder.Entity("PRC.CORE.Model.DataCustom", b =>
                {
                    b.HasOne("PRC.CORE.Model.Customer", "Customer")
                        .WithOne("DataCustom")
                        .HasForeignKey("PRC.CORE.Model.DataCustom", "IdDataCustom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PRC.CORE.Model.Request", b =>
                {
                    b.HasOne("PRC.CORE.Model.Call", "Call")
                        .WithOne("Request")
                        .HasForeignKey("PRC.CORE.Model.Request", "IdRequest")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Call");
                });

            modelBuilder.Entity("PRC.CORE.Model.State", b =>
                {
                    b.HasOne("PRC.CORE.Model.Call", "Call")
                        .WithMany("States")
                        .HasForeignKey("CallRef");

                    b.Navigation("Call");
                });

            modelBuilder.Entity("PRC.CORE.Model.User_Role", b =>
                {
                    b.HasOne("PRC.CORE.Model.Role", "Role")
                        .WithMany("Users_Roles")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRC.CORE.Model.User", "User")
                        .WithMany("Users_Roles")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRC.CORE.Model.Call", b =>
                {
                    b.Navigation("Request");

                    b.Navigation("States");
                });

            modelBuilder.Entity("PRC.CORE.Model.Customer", b =>
                {
                    b.Navigation("Calls");

                    b.Navigation("DataCustom");
                });

            modelBuilder.Entity("PRC.CORE.Model.Extension", b =>
                {
                    b.Navigation("Calls");
                });

            modelBuilder.Entity("PRC.CORE.Model.Role", b =>
                {
                    b.Navigation("Users_Roles");
                });

            modelBuilder.Entity("PRC.CORE.Model.User", b =>
                {
                    b.Navigation("Users_Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
